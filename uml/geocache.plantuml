@startuml Geocache

    skinparam {
        ArrowColor Black
        ClassHeaderBackgroundColor RoyalBlue
        ClassFontColor White
        ClassBorderColor Black
        ClassBackgroundColor White
        PageMargin 15
    }

    class User << U, White >> {
        + id : primaryKey
        + firstname : string
        + name : string
        + faculty_id : int
        + party_id : int
        # api_token : stringx
        + email : string
        # email_verified_at : timestamp
        # password : string
        # remember_token : string
        # created_at : timestamp
        # updated_at : timestamp

        + faculty() : Faculty -> belongsTo
        + party() : Party -> belongsTo
        + caches() : Cache[] -> belongsToMany
    }

    class Faculty << F, White>> {
        + id : primaryKey
        + slug : string
        + name : string

        + user() : User -> hasOne
    }

    class Party << P, White>> {
        + id : primaryKey
        + code : string
        + user_id : int
        + registered : timestamp
        # deleted_at : timestamp

        + users() : User[] -> hasMany
        + leader() : User -> belongsTo
    }

    class Cache << C, White >> {
        + id : primaryKey //
        + code : string //
        + lat : double //
        + lon : double //
        + points : double //
        + nb_found : int //
        + found_at : timestamp //
        + show_at : timestamp //
        + bonus : int // first to get the cache
        + type : string -> "final" || "geocache || capsule" //
        + time_bonus : int -> +200 par jour //
        + num : integer -> "title + num -> titre" //
        + desc : text -> contenu html //
        -- mutator --
        + coords() : double[lat, lon]
        + title() -> type + num
        __
        + users() : User[] -> belongsToMany
        + puzzle() : Puzzle -> hasOne
    }


    class Puzzle << P, White >> {
        + id : primaryKey
        + puzzle_id : int
        + posx : int
        + posy : int
        + src : string
        --mutator--
        + mobileCoord() : int[posx, posy]
        --

        + cache() : Cache -> belongsTo

    }

    /' class CacheMaintenance << M, White >> {
        + id : primaryKey
        + cache_id : int
        + note : text
        + verified_at : timestamp
        + user_id : int

        + cache() : Cache -> belongsTo
        + user() : User -> belongsTo
    } '/

    /'class CacheParty << P, White >> {
        + party_id : int
        + cache_id : int
        + found_at : int
        + points_given : double
    }'/

    class CacheUser << U, White >> {
        + user_id : int
        + cache_id : int
        + found_at : int
        + points_given : double
    }


    User "1" --right- "1" Faculty
    User "1...3" -left- "0...1" Party
    'User "1" -- "1" CacheMaintenance
    
    Cache "0...*" --up- "0...*" User
    'Cache "0...*" --- "0...*" Party

    'Cache "1" *-left- "1" CacheMaintenance
    Cache "1" --right- "1" Puzzle


    (Cache, User) . CacheUser
    '(Cache, Party) . CacheParty

@enduml
